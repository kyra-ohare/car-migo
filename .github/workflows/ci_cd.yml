# For further information about Maven workflows
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# For further information about CodeQL workflows
# Language support: https://git.io/codeql-language-support
# Queries: ./path/to/local/query, your-org/your-repo/queries@main
# Command-line programs to run using the OS shell:https://git.io/JvXDl

name: Car-Migo builds with Maven, CodeQL and Docker

on:
  push:
    branches:
      - main
      - ui
  pull_request:
    branches:
      - main
  schedule:
#   runs every first day of the month at 7:00am
    - cron: '0 7 1 * *'

env:
# this is used by /journeys/calculateDistance endpoint
  CAR_MIGO_OPEN_FEIGN_DISTANCE_KEY: ${{ secrets.CAR_MIGO_OPEN_FEIGN_DISTANCE_KEY }}

jobs:
  # maven:
  #   name: Maven Build
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: maven
  #     - name: Build with Maven
  #       run: cd ./server && ./mvnw clean verify && cd ..
  node:
    name: Node Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - version: 20
            env: NODE_OPTIONS=--openssl-legacy-provider
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run linting rules and tests
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node.version }}
          cache: npm
      - run: cd ./ui && ls -al && node -v && npm ci && npm run lint && npm run testc && cd ..
  # codeql:
  #   name: CodeQL Analysis
  #   runs-on: ubuntu-latest
  #   permissions:
  #     actions: read
  #     contents: read
  #     security-events: write
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       language: ['java']
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v2
  #       with:
  #         languages: ${{ matrix.language }}
  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v2
  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v2
  # docker:
  #   name: Docker
  #   runs-on: ubuntu-latest
  #  if: github.ref_name == 'main'
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'
  #         cache: maven
  #     - name: Build with Maven
  #       run: cd ./server && ./mvnw clean verify -DskipTests && cd ..
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #         password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./
  #         file: ./Dockerfile
  #         builder: ${{ steps.buildx.outputs.name }}
  #         push: true
  #         tags: ${{ secrets.DOCKER_HUB_USERNAME }}/car-migo:latest
  #         cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/car-migo:buildcache
  #         cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/car-migo:buildcache,mode=max
  #     - name: Image digest
  #       run: echo ${{ steps.docker_build.outputs.digest }}
