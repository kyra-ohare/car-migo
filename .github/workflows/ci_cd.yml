# For further information about Maven workflows
# https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# For further inforamtion about CodeQL workflows
# Language support: https://git.io/codeql-language-support
# Queries: ./path/to/local/query, your-org/your-repo/queries@main
# Command-line programs to run using the OS shell:https://git.io/JvXDl

name: Car-Migo builds with Maven and CodeQL

on:
  push:
  pull_request:
  schedule:
    - cron: '37 20 * * 4'

env:
# this is used by /journeys/calculateDistance endpoint
  CAR_MIGO_OPEN_FEIGN_DISTANCE_KEY: ${{ secrets.CAR_MIGO_OPEN_FEIGN_DISTANCE_KEY }}

jobs:
  maven:
    name: Maven Build
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean package --file server/pom.xml
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['java']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
  docker:
    name: Docker
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean package --file server/pom.xml -DskipTests
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/car-migo:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/car-migo:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/car-migo:buildcache,mode=max
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
